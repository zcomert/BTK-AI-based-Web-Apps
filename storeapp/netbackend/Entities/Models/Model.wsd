@startuml Model
title "Product Model"

interface IProductRepository {
    +GetAllProducts(): IQueryable<Product>
    +GetOneProduct(filter:Expression):Product
    +CreateOneProduct(product:Product):Product
    +UpdateOneProduct(product:Product):Product
    +DeleteOneProduct(product:Product):void    

}

class FakeProductRepository {
        -products:List<Product>
        +GetAllProducts(): IQueryable<Product>
        +GetOneProduct(filter:Expression):Product
        +CreateOneProduct(product:Product):Product
        +UpdateOneProduct(product:Product):Product
        +DeleteOneProduct(product:Product):void   
}

class RepositoryContext {
    
}

class Product{
    -comments:List<Comment>
    +setComments():void
    +getComments():List<Comment>
}

class Comment{
    -commentId:int,
    -productId:int
    -text:String
    --
    +getCommentId():int
    +getProductId():int
    +getText():String
    --
    +setCommentId():void
    +setProductId():void
    +setText():void
}

class ProductRepository {
    -context:DbContext<RepositoryContext>
    +GetAllProducts(): IQueryable<Product>
    +GetOneProduct(filter:Expression):Product
    +CreateOneProduct(product:Product):Product
    +UpdateOneProduct(product:Product):Product
    +DeleteOneProduct(product:Product):void   
}

FakeProductRepository .-up.|> IProductRepository : "implements"
ProductRepository .-up.|> IProductRepository : "implements"
Product - Comment

hide empty members
@enduml